norm(10)
rnorm(10, mean=2, sd=20)
set.seed(seed = 10)
rnorm(10, mean=2, sd=20)
rnorm(10, mean=2, sd=20)
rnorm(10, mean=2, sd=20)
set.seed(seed = 10)
rnorm(10, mean=2, sd=20)
rnorm(10, mean=2, sd=20)
rnorm(10, mean=2, sd=20)
rnorm(10, mean=2, sd=20)
x = rnorm(10, mean=2, sd=20)
x
x
x = rnorm(10, mean=2, sd=20)
x
set.seed(10)
rnorm(10)
rnorm(10)
y = x + x**2 + 0.3
plot(x, y)
y = x + x*2 + 0.3
plot(x, y)
plot(x, y, pch=19)
model_
model_ = lm(y~x)
model_
# Sumario
summary(model_)
# Sumario
summary(model_)
gc()
install.packages(c("commonmark", "data.table", "evaluate", "glue", "jsonlite", "xfun", "xts"))
set.seed(10)
x = rnorm(10)
y = x + x*2 + 0.3
plot(x, y, pch=19)
# criando modelo no R
model_ = lm(y~x)
# Imprimindo o R
model_
mtcars
mtcars
head(mtcars, n=10)
head(mtcars, n=5)
cor.test
# modelo 1 com mpg~disp
model_1 = lm(mpg~disp, data=mtcars)
model_1
summary(model_1)
qt(-8.747)
qt(-8.747, 30)
plot(model_1)
print(1)
```{r}
plot(cars)
mtcars
model_1 = lm(mpg~dist, data = mtcars)
model_1 = lm(mpg~disp, data = mtcars)
model_1
summary(model_1)
plot(mtcars$mpg, mtcars$disp)
plot(model_1)
plot(mtcars$mpg, mtcars$disp)
pred_ = unname(predict(model_!))
pred_ = unname(predict(model_1))
pred_
pred_/4
pred_ = unname(predict(model_1))
!lines(pred_)
lines(pred_)
lines(pred_)
line(pred_)
lines(pred_)
!lines(pred_)
!lines(pred_)
!lines(mtcars$disp, pred_)
plot(mtcars$disp, mtcars$mpg, )
lines(mtcars$disp, pred_)
plot(mtcars$disp, mtcars$mpg, )
lines(mtcars$disp, pred_)
lengths(mtcars)
plot(cars)
cars
data = mtcars
model
model
model = lm(mpg~., data = data)
model
step(model, direction = "backward")
backward_ = step(model, direction = "backward")
backward_ = step(model, direction = "backward")
backward_$model
backward_$anova
summary(backward_)
summary(backward_)
0.000216 > 0.001
model
summary(model)
0.2739 > 0.05
formula(model)
forward_ = step(model, direction = "forward", scope = formula(model))
forward_ = step(model, direction = "forward", scope = formula(model))
forward_ = step(model, direction = "forward")
forward_ = step(model, direction = "forward")
forward_
forward_ = step( lm(mpg~1, data=data), direction = "forward")
forward_ = step( lm(mpg~1, data=data), direction = "forward", scope = formula(model) )
forward_
summary(forward_)
0.098480 > 0.001
tinytex::install_tinytex()
0.0984 > 0.01
> Para um nivel de significancia 0.001 hรก evidencia suficiente para aceitar $H_0$:cyl=0
install.packages("glmnet")
library(glmnet)
x = model.matrix(data=dat)
x = model.matrix(data=data)
x = model.matrix(mpg~.,data=data)
y = data$mpg
x = model.matrix(mpg~.,data=data)
y = data$mpg
glm(x,y, alpha=1)
cv.glmnet(x, y, lambda = 1)
cv.glmnet(x, y, alpha = 1)
lasso = cv.glmnet(x, y, alpha = 1)
lasso = cv.glmnet(x, y, alpha = 1)
lasso
plot(lasso$lambda)
plot(lasso)
